importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.1.0/workbox-sw.js');

if (workbox) {
  console.log(`[SW] Workbox loaded v7.1.0 and ready for action!`);

  // üí° CACHE_VERSION: ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å Precache
  // ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Version ‡∏à‡∏∞‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô Logic ‡∏•‡∏ö Cache ‡πÄ‡∏Å‡πà‡∏≤‡πÉ‡∏ô activate event
  const CACHE_VERSION = 'v20251031_FINAL'; 
  const OFFLINE_PAGE = '/offline.html'; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Fallback
  const API_BLACKLIST = ['supabase.co', 'google.com']; // ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ API ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£ Cache

  // -----------------------------------
  // STEP 1: Install & Activate (Cache Management)
  // -----------------------------------
  
  // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô skipWaiting() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Service Worker ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏Å‡πà‡∏≤
  self.addEventListener('install', () => {
    self.skipWaiting();
  });

  self.addEventListener('activate', event => {
    // ‡∏•‡∏ö cache ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà version ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (Cache Busting)
    event.waitUntil(
      caches.keys().then(keys => {
        return Promise.all(
          keys.map(key => {
            if (!key.includes(CACHE_VERSION)) {
              console.log(`[SW] Deleting old cache: ${key}`);
              return caches.delete(key);
            }
          })
        );
      }).then(() => {
        console.log(`[SW] Activate successful. Claiming clients.`);
        self.clients.claim();
      })
    );
  });

  // -----------------------------------
  // STEP 2: Precache Offline Essentials
  // -----------------------------------
  // Precache ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Offline
  workbox.precaching.precacheAndRoute([
    // ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á SPA
    { url: '/index.html', revision: CACHE_VERSION }, 
    { url: OFFLINE_PAGE, revision: CACHE_VERSION },
    // ‡πÑ‡∏ü‡∏•‡πå PWA/Assets
    { url: '/manifest.webmanifest', revision: CACHE_VERSION },
    { url: '/images/og-default.webp', revision: CACHE_VERSION }, // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û default
    // Icons
    { url: '/icons/icon-192x192.png', revision: CACHE_VERSION },
    { url: '/icons/icon-512x512.png', revision: CACHE_VERSION },
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå CSS/JS ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Hash ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
  ]);

  // -----------------------------------
  // STEP 3: Routing & Strategy
  // -----------------------------------
  
  // 1. Documents (HTML Pages - Network First with Offline Fallback)
  // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Network ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å Offline ‡πÉ‡∏´‡πâ Fallback ‡πÑ‡∏õ Offline Page
  workbox.routing.registerRoute(
    ({ request, url, event }) => request.mode === 'navigate', // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á HTML
    new workbox.strategies.NetworkFirst({
      cacheName: `pages-${CACHE_VERSION}`,
      plugins: [
        new workbox.cacheableResponse.CacheableResponsePlugin({ statuses: [200] }),
        new workbox.expiration.ExpirationPlugin({ maxEntries: 20, maxAgeSeconds: 86400 }), // 1 ‡∏ß‡∏±‡∏ô
        // üí° Offline Fallback
        {
          handlerDidError: async () => {
            return caches.match(OFFLINE_PAGE);
          }
        }
      ],
    })
  );

  // 2. JS / CSS (StaleWhileRevalidate)
  // ‡πÄ‡∏£‡πá‡∏ß‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Cache ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Network ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á (‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Static Assets)
  workbox.routing.registerRoute(
    ({ request }) => ['script', 'style'].includes(request.destination),
    new workbox.strategies.StaleWhileRevalidate({
      cacheName: `static-${CACHE_VERSION}`,
      plugins: [
        new workbox.expiration.ExpirationPlugin({ maxEntries: 50, maxAgeSeconds: 31536000 }) // 1 ‡∏õ‡∏µ
      ],
    })
  );

  // 3. Fonts (CacheFirst - ‡∏≠‡∏≤‡∏¢‡∏∏‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô)
  workbox.routing.registerRoute(
    ({ request }) => request.destination === 'font',
    new workbox.strategies.CacheFirst({
      cacheName: `fonts-${CACHE_VERSION}`,
      plugins: [
        new workbox.expiration.ExpirationPlugin({ maxEntries: 30, maxAgeSeconds: 31536000 }),
      ],
    })
  );

  // 4. Images (CacheFirst - ‡∏≠‡∏≤‡∏¢‡∏∏ 30 ‡∏ß‡∏±‡∏ô)
  // ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏ö‡πà‡∏≠‡∏¢
  workbox.routing.registerRoute(
    ({ request }) => request.destination === 'image',
    new workbox.strategies.CacheFirst({
      cacheName: `images-${CACHE_VERSION}`,
      plugins: [
        new workbox.expiration.ExpirationPlugin({ maxEntries: 200, maxAgeSeconds: 2592000 }), // 30 ‡∏ß‡∏±‡∏ô
      ],
    })
  );
  
  // 5. **API Whitelist (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ Cache ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API)**
  // ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å (‡πÄ‡∏ä‡πà‡∏ô Supabase) ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å Service Worker Cache
  self.addEventListener('fetch', event => {
    const shouldBypass = API_BLACKLIST.some(domain => event.request.url.includes(domain));
    
    if (shouldBypass) {
      console.log(`[SW] Bypassing cache for API: ${event.request.url}`);
      // ‡πÉ‡∏ä‡πâ NetworkOnly ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Network ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      event.respondWith(
        new workbox.strategies.NetworkOnly().handle({ event: event, request: event.request })
      );
    }
  });

} else {
  console.error('[SW] Workbox failed to load. PWA features disabled.');
}
