# =============================================================================
# netlify.toml (ปรับปรุงแล้ว)
# =============================================================================

# 1. การตั้งค่า Build
[build]
  publish = "."  # โฟลเดอร์ที่ deploy (ถูกต้องแล้วสำหรับเว็บ Static)

# 2. การตั้งค่า Headers (รวบให้สั้นลงและปลอดภัยขึ้น)

# --- ควบคุมไฟล์หลักของเว็บ (โหลดใหม่เสมอ) ---
[[headers]]
  for = '''
  /*.html
  '''
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# --- ควบคุม Service Worker (ห้ามแคชเด็ดขาด) ---
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Service-Worker-Allowed = "/"

# --- ควบคุมไฟล์ Assets ที่ไม่ค่อยเปลี่ยน (ให้เบราว์เซอร์เช็คก่อน) ---
[[headers]]
  for = '''
  /images/*
  /icons/*
  /fonts/*
  /*.css
  /*.js
  '''
  [headers.values]
    Cache-Control = "public, max-age=31536000, must-revalidate"

# --- ควบคุมไฟล์ PWA/SEO (แคชได้ แต่ให้เช็คใหม่ทุกวัน) ---
[[headers]]
  for = '''
  /manifest.webmanifest
  /robots.txt
  /sitemap.xml
  '''
  [headers.values]
    Cache-Control = "public, max-age=86400, must-revalidate"  # 1 วัน

# 3. การตั้งค่า Redirects (จัดการลิงก์เก่าและลิงก์ผิด)

# ตัวอย่าง redirect จากลิงก์เก่าไปลิงก์ใหม่
[[redirects]]
  from = "/old-path/*"
  to = "/new-path/:splat"
  status = 301
  force = true

[[redirects]]
  from = "/old-page.html"
  to = "/new-page.html"
  status = 301
  force = true

# คำสั่ง redirect สำหรับ 404 สำหรับลิงก์ที่ไม่เจอ
# คำสั่งนี้จะไม่ควรใช้กับทุก URL เพราะจะทำให้ทุก URL ไปหน้า 404
# เราจะลบหรือคอมเมนต์ออกเพื่อให้ URL สาธารณะทำงานปกติ
# [[redirects]]
#   from = "/*"
#   to = "/404.html"
#   status = 404

# เพิ่มการ redirect สำหรับ sitemap.xml ให้เข้าถึงได้โดยตรง
[[redirects]]
  from = "/sitemap.xml"
  to = "/sitemap.xml"
  status = 200

# ถ้าต้องการให้หน้า 404 ทำงานตามปกติ (ไม่ใช่ redirect ทุก URL)
# ให้แน่ใจว่าไฟล์ 404.html อยู่ใน root ของโปรเจกต์ และอย่าใช้ redirect ทั่วไป
